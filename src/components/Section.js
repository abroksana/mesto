export class Section {
  constructor({items, renderer}, containerSelector) {
    this._items = items; /* это массив данных, которые нужно добавить на страницу при инициализации класса */
    this._renderer = renderer; /* это функция, которая отвечает за создание и отрисовку данных на странице */
    this._container = document.querySelector(containerSelector); /* селектор контейнера, в который нужно добавлять созданные элементы */
  }

/* селектор контейнера, в который нужно добавлять созданные элементы */
/* Отрисовка каждого отдельного элемента осуществляется функцией renderer */
  renderItems() {
    this._items.forEach((items) => {
      this._renderer(items);
    });
  }

/* публичный метод addItem, который принимает DOM-элемент и добавляет его в контейнер */
  addItem(cardElement) {
    this._container.append(cardElement);
  }

/* Добавить карточку на страницу */
  prependItem(cardElement) {
  this._container.prepend(cardElement);
  };
}

// Создайте класс Section, который отвечает за отрисовку элементов на странице. Этот класс:
// Первым параметром конструктора принимает объект с двумя свойствами: items и renderer.
// Свойство items — это массив данных, которые нужно добавить на страницу при инициализации класса.
// Свойство renderer — это функция, которая отвечает за создание и отрисовку данных на странице.
// Второй параметр конструктора — селектор контейнера, в который нужно добавлять созданные элементы.
// Содержит публичный метод, который отвечает за отрисовку всех элементов. Отрисовка каждого отдельного
// элемента должна осуществляться функцией renderer.
// Содержит публичный метод addItem, который принимает DOM-элемент и добавляет его в контейнер.
// У класса Section нет своей разметки. Он получает разметку через функцию-колбэк и вставляет её в контейнер.
